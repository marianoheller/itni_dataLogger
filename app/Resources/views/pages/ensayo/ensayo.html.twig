{% extends 'pages/ensayo_base.html.twig' %}


{% block extraCss %}
    <style>
        /*#brand-nav-canales{}*/
    </style>
{% endblock %}


{% block ensayo %}
    <ul id="pillsCanales" class="nav nav-pills nav-stacked col-md-1">
        <li id="brand-nav-canales"><b>Canal #</b></li>
        {% for i in 1..32 %}
            <li><a id="{{i}}" href="#tab_{{i}}" data-toggle="pill">Nº {{i}}</a></li>
        {% endfor %}
    </ul>
    <div class="tab-content col-md-11">

    {% for i in 1..32 %}
        <div class="tab-pane" id="tab_{{i}}">
            <h4>Canal {{i}}</h4>
            <div class="container col-md-1">

            </div>
            <div class="container col-md-10">
                <canvas id="graph_{{i}}"></canvas>
            </div>
        </div>
    {% endfor %}

    </div><!-- tab content -->
{% endblock %}


{% block ensayoJavascript %}

    {#<script src="{{ asset('media/js/moment/moment.js') }}"></script>
    <script src="{{ asset('media/js/charts/Chart.bundle.js') }}"></script>#}

    <script src="http://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.6/Chart.bundle.min.js"></script>


    <script>
        //var timeFormat = 'HH:mm:ss DD-MM-YYYY';
        var timeFormat = 'DD/MM/YYYY HH:mm';

        function randomInt() {
            return Math.round(Math.random() * 10);
        }

        function counterTimestamp() {
            if ( typeof counterTimestamp.counter == 'undefined' ) {
                // It has not... perform the initialization
                counterTimestamp.counter = randomInt();
            }
            else {
                counterTimestamp.counter += randomInt();
            }
            return counterTimestamp.counter;
        }

        function randomScalingFactor() {
            return Math.round(Math.random() * 100 * (Math.random() > 0.5 ? -1 : 1));
        }

        function randomColorFactor() {
            return Math.round(Math.random() * 255);
        }

        function randomColor(opacity) {
            return 'rgba(' + randomColorFactor() + ',' + randomColorFactor() + ',' + randomColorFactor() + ',' + (opacity || '.3') + ')';
        }

        function newDate(days) {
            return moment().add(days, 'd').toDate();
        }

        function newDateString(days) {
            return moment().add(days, 'd').format(timeFormat);
        }

        function newTimestamp(days) {
            return moment().add(days, 'd').unix();
        }



        {% for i in 1..32 %}

        var config_{{ i }} = {
            type: 'line',
            data: {
                labels: [moment("{{t_inicio}}", "YYYY-MM-DD HH:mm:ss").toDate()], // Date Objects
                datasets: [{
                    label: "Canal {{ i }}",
                    data: [0],
                    fill: false,
                    //lineTension: 0,
                    pointRadius: 0,
                    borderColor: randomColor(0.4),
                    backgroundColor : randomColor(0.5),
                    pointBorderColor: randomColor(0.7),
                    pointBackgroundColor : randomColor(0.5),
                    pointBorderWidth : 1
                }]
            },
            options: {
                responsive: true,
                title:{
                    display:true,
                    text:"Chart"
                },
                scales: {
                    xAxes: [{
                        type: "time",
                        time: {
                            format: timeFormat,
                            //unit: 'second',
                            //unitStepSize: 10,
                            round: 'minute',
                            tooltipFormat: 'll HH:mm',
                            displayFormats: {
                                millisecond: 'mm:ss',
                                second: 'mm:ss',
                                minute: 'mm:ss',
                                hour: 'HH:mm',
                                day: 'HH:mm'
                            }
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Fecha'
                        }
                    }, ],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Valor'
                        }
                    }]
                },
            }
        };

        {% endfor %}


        $(document).ready(function() {
            {% for i in 1..32 %}
            var graph_{{i}} = document.getElementById('graph_{{i}}').getContext('2d');
            window.Chart_{{i}} =  new Chart(graph_{{i}}, config_{{ i }});
            {% endfor %}
        });

        window.onload = function() {
            getGraphData();
        };




    </script>


    <script>
        var set_delay = 10000;




        function convertDate(inputFormat) {
            function pad(s) { return (s < 10) ? '0' + s : s; }
            var d = new Date(inputFormat);
            var date =  [d.getFullYear(), pad(d.getMonth()+1),pad(d.getDate()) ].join('-');
            var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
            return  [date,time].join(" ");
        }

        /*
         * TODO Hacer andar el tema fecha...
         */

        function toTimeString( secs ) {
            var days, hours, minutes, seconds;

            if( secs == null )
                return "";

            days = ( secs / 86400 ) >> 0;
            hours = ( secs % 86400 / 3600 ) >> 0;
            minutes = ( secs % 3600 / 60 ) >> 0;
            seconds = ( secs % 60 );
            seconds = seconds < 10 ? "0" + seconds : seconds;
            minutes = minutes < 10 ? "0" + minutes : minutes;
            hours = hours && hours < 10 ? "0" + hours : hours;

            return "" + ( days ? days+" - " : "" ) + ( hours ? hours+":" : "" ) + minutes + ":" + seconds;
        };


        function getGraphData() {
            var lastTimeStampLocal = "";
            var len = window.Chart_1.data.labels.length;
            if ( len == 0 ) {
                lastTimeStampLocal = "{{ t_inicio }}";
            }
            else {
                lastTimeStampLocal = window.Chart_1.data.labels[len - 1];
                lastTimeStampLocal = moment(lastTimeStampLocal).format("YYYY-MM-DD HH:mm:ss");
            }

            var timetampsToSend = '{ "timeStamp": [' +
                '{ "lastTimeStamp": "'+lastTimeStampLocal+'", "firstTimeStamp": "{{ t_inicio }}", "currentTime": "01-01-1970 00:00:01"}' +
            ']}';
            var jsonToSend = JSON.stringify(JSON.parse(timetampsToSend));
            console.log("Sending data: ",jsonToSend);


            var jsonData = $.ajax({
                url: '/getGraphData',
                type:'POST',
                contentType: "application/json; charset=utf-8",
                data: jsonToSend,
                dataType: 'json'
            })
            .done(function (results) {
                console.log(results);
                {% for i in 1..32 %}
                    // Split timestamp and data into separate arrays
                    var labels_{{i}} = [], data_{{i}} = [];
                    if ( ("packets_{{i}}" in results) ) {
                        // ABAJO DOS INTENTOS DE CICLAR SOBRE VARIOS PACKETS DEL MISMO CHANNEL
                        Object.keys(results["packets_{{i}}"]).forEach(function (key) {
                            var value = results["packets_{{i}}"][key];
                            labels_{{i}}.push(value.timestamp);
                            data_{{i}}.push(parseFloat(value.payloadString));
                        });
                    }
                {% endfor %}

                console.log("Adding data");
                {% for i in 1..32 %}
                    //Add data
                    for (var i=0 ; i< data_{{i}}.length ; i++) {

                        var myDate =  moment.unix(labels_{{i}}[i]).toDate();

                        window.Chart_{{i}}.data.labels.push(myDate);
                        window.Chart_{{i}}.data.datasets[0].data.push(data_{{i}}[i]);
                    }
                    window.Chart_{{i}}.update(0);
                {% endfor %}
                //window.Chart_1.update(0);



            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                console.log("Failed AJAX request.");
                console.log("Status: "+textStatus);
                console.log("Error thrown: "+errorThrown);
                console.log("--------------");
            })
            .always(function () {
                var lastTimeOut = setTimeout(getGraphData, set_delay);
            });
        };

    </script>

    <script>

        $('a[data-toggle="pill"]').on('shown.bs.tab', function (e) {
            var target = $(e.target).attr("id");
            var targetString = "Chart_"+target;
            //eval("window."+targetString+".update(0);");
        });


        window.onbeforeunload = function (e) {
            var e = e || window.event;
            var msg = "¿Esta seguro que desea abandonar la página?"

            // For IE and Firefox
            if (e) {
                e.returnValue = msg;
            }

            // For Safari / chrome
            return msg;
        };

        /*
         TODO hacer que ande cuando aprieten el boton de atras.
          */


    </script>




{% endblock %}

